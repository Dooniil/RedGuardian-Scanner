from src.executors.windows import exec_command


class VulnerabilityHandler:

    # @staticmethod
    # def filter_state(items):
    #     key, val = items
    #     if isinstance(val, dict):
    #         state_dict = val.get('state')
    #         if state_dict and state_dict.get('state') == 'up':
    #             return True
    #     return False

    @staticmethod
    def scan(task):
        login_encrypted, password_encrypted = task.get('credential')['login'], task.get('credential')['password']
        login, password = None, None # TODO: decrypt login and password
        hosts: list = task.get('settings')['hosts']
        scripts = task.get('exec_defs')
       
        for host in hosts:
            target = host.get('ip')
            if host.get('dns'):
                target = host.get('dns')
            for script in scripts:
                # TODO: parse script
                result = exec_command(target, login, password, script)
        
        return result
